name: CI
on:
  pull_request:
  push:
    branches:
      - main
  repository_dispatch:
    types: [deploy]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  RUST_BACKTRACE: 1
  CARGO_INCREMENTAL: 0 # makes cache smaller
  CARGO_PROFILE_DEV_DEBUG: 0  

jobs:
  check:
    name: Check (msrv)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@1.74

      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "build"

      - name: Run cargo check
        run: cargo check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: 1
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@1.74

      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "build"

      - name: Run cargo test
        run: cargo test --workspace

  lint:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@1.74
        with:
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "build"

      - name: Run cargo fmt
        run: cargo fmt --all --check

      - name: Run cargo clippy
        run: cargo clippy --workspace --all-targets

      - name: Run cargo doc
        run: cargo doc --no-deps --workspace --document-private-items
        env:
          RUSTDOCFLAGS: -D warnings

  deploy:
    name: Build and push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [check, test, lint]
    if: github.ref == 'refs/heads/main'
    concurrency:
      group: deploy
      cancel-in-progress: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: matoous/wiki
          path: wiki

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - run: flyctl deploy
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}        
